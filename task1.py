import os
from tkinter import *
from tkinter import ttk, messagebox, filedialog, simpledialog
from datetime import datetime
import glob

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
def sort_treeview(treeview, column, reverse=False):
    """–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ Treeview."""
    items = list(treeview.get_children())
    items.sort(key=lambda x: treeview.item(x, "values")[column], reverse=reverse)
    
    for index, item in enumerate(items):
        treeview.move(item, '', index)
    
    return not reverse  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
def on_treeview_column_click(event, treeview, column):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º —Å—Ç–æ–ª–±—Ü–æ–≤."""
    global reverse_order
    reverse_order = sort_treeview(treeview, column, reverse=reverse_order)

def search_files():
    directory = filename_entry.get()
    if os.path.isdir(directory):
        files = os.listdir(directory)
        update_file_list(directory, files)
    else:
        update_file_list("", [])

def update_file_list(directory, files):
    for item in tree.get_children():
        tree.delete(item)
    for file in files:
        file_name = os.path.splitext(file)[0]
        file_path = os.path.join(directory, file)
        file_info = os.stat(file_path)
        file_size = file_info.st_size
        file_mtime = datetime.fromtimestamp(file_info.st_mtime).strftime('%Y-%m-%d %H:%M:%S')
        file_extension = os.path.splitext(file)[1]
        tree.insert('', 'end', text=file, values=(file_name, file_extension, file_size, file_mtime))

def create_file():
    directory = filedialog.askdirectory(title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞")
    if directory:
        file_name = simpledialog.askstring("–°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª", "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞:")
        if file_name:
            file_path = os.path.join(directory, file_name)
            try:
                with open(file_path, 'w') as f:
                    f.write("")
                messagebox.showinfo("–£—Å–ø–µ—Ö", f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ {directory}.")
                search_files()
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", str(e))

def delete_file():
    selected_item = tree.selection()
    if selected_item:
        file_name = tree.item(selected_item, 'text')
        directory = filename_entry.get()
        file_path = os.path.join(directory, file_name)
        try:
            os.remove(file_path)
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
            search_files()
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))
    else:
        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

def search_files_by_mask(directory, mask):
    return glob.glob(os.path.join(directory, mask))

def show_context_menu(event):
    context_menu.post(event.x_root, event.y_root)

root = Tk()
root.title("–§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä")
root.geometry("1000x600")

filename_entry = Entry(root, width=50)
filename_entry.grid(column=1, row=1, columnspan=3)

search_button = Button(root, text="üîç –ü–æ–∏—Å–∫", command=search_files)
search_button.grid(column=4, row=1)

create_button = Button(root, text="–°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª", command=create_file)
create_button.grid(column=5, row=1)

delete_button = Button(root, text="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", command=delete_file)
delete_button.grid(column=6, row=1)

context_menu = Menu(root, tearoff=0)
context_menu.add_command(label="–°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª", command=create_file)
context_menu.add_command(label="–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª", command=delete_file)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Treeview
tree = ttk.Treeview(root, columns=("–ò–º—è —Ñ–∞–π–ª–∞", "–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ", "–†–∞–∑–º–µ—Ä (–±–∞–π—Ç)", "–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è"), show='headings')

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
tree.heading("–ò–º—è —Ñ–∞–π–ª–∞", text="–ò–º—è —Ñ–∞–π–ª–∞", command=lambda: on_treeview_column_click(event=None, treeview=tree, column=0))
tree.heading("–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ", text="–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ", command=lambda: on_treeview_column_click(event=None, treeview=tree, column=1))
tree.heading("–†–∞–∑–º–µ—Ä (–±–∞–π—Ç)", text="–†–∞–∑–º–µ—Ä (–±–∞–π—Ç)", command=lambda: on_treeview_column_click(event=None, treeview=tree, column=2))
tree.heading("–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è", text="–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è", command=lambda: on_treeview_column_click(event=None, treeview=tree, column=3))

# –†–∞–∑–º–µ—â–µ–Ω–∏–µ Treeview
tree.grid(column=1, row=3, columnspan=5, sticky='nsew')

# –ü—Ä–∏–≤—è–∑–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
tree.bind("<Button-3>", show_context_menu)

root.grid_rowconfigure(4, weight=1)
root.grid_columnconfigure(1, weight=1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
reverse_order = False

root.mainloop()
